application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName intranet
    blueprints []
    buildTool maven
    cacheProvider ehcache
    clientFramework angularX
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1643256115296
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    enableGradleEnterprise false
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation true
    gradleEnterpriseHost ""
    jhiPrefix leap
    jhipsterVersion "7.6.0"
    jwtSecretKey "Nzk3NDMwN2EyZmNiNDZlODZmMGNmYzMzMjYzZTUxNzA2MDdmNDZlZTNhYzFhMWY2MzFiNzAxMGUwNTFiMGYxMzA3NzVmNWNmYWVjZjMwNzhkMmFkMjYwNGYxMzBmNDRhZGU4NTgyODY0NDU3OGJjZDU5ZDQ5NThlNDNlMzkwMTQ="
    languages [en, vi]
    messageBroker false
    nativeLanguage en
    otherModules []
    packageName vn.leap.intranet
    prodDatabaseType postgresql
    reactive false
    searchEngine false
    serverPort 8080
    serviceDiscoveryType false
    skipUserManagement false
    testFrameworks []
    websocket false
    withAdminUi true
  }

  entities *
}

entity Employee {
  @Id id                  Long
  employeeCode            String        required
  firstName               String        required
  lastName                String        required
  image                   ImageBlob
  effectiveDate           ZonedDateTime required
  slogan                  String
  professionalEmail       String        required unique
  professionalPhoneNumber String        required unique
  commissionPct           Long          required         min(1) max(100)
  hiredDate               ZonedDateTime required
  contractNumber          String        required unique
  contractStartDate       ZonedDateTime required
  contractEndDate         ZonedDateTime 
  contractType            ContractType  required
  contractFile            Blob
  salary                  Long          required          min (1000000)
  sex                     Sex           required
  dob                     ZonedDateTime required
  placeOfBirth            String
  personalPhoneNumber     String        required unique
  permanentAddress        String        required
  temporaryAddress        String        required
  idNumber                String        required
  idIssuedDate            ZonedDateTime required
  idIssuedLocation        String        required
  socialInsuranceNumber   String
  taxIdentificationNumber String
  qualification           String
  bankAccount             String        required
  bankCode                String        required
}

entity Job {
  @Id id Long
  jobTitle String required unique
  minSalary Long required min (1000000)
  maxSalary Long required min (1000000)
}

entity Project {
  @Id id Long
  name String required
  description String required
  startDate ZonedDateTime required
  endDate ZonedDateTime
  status ProjectStatus required
}
entity Assignment {
  @Id id Long
  startDate ZonedDateTime required
  projectRole ProjectRole required
}

entity Event {
  @Id id Long
  eventTitle String required unique
  eventDate ZonedDateTime required
  description String required
}

enum ProjectRole {
  ENGINEER,
  ADMIN,
  MANAGER,
  DIRECTOR,
  INTERN
}
enum Sex {
  FEMALE,
  MALE,
  UNKNOWN
}
enum ProjectStatus {
  NEW,
  OPEN,
  PROGRESS,
  COMPLETED,
  HOLD
}
enum ContractType {
  DEFINITIVE,
  INFINITIVE
}

relationship OneToOne {
  Employee{userId} to User
}

relationship OneToMany {
  Project{assignment} to Assignment{project required}
  Employee{assignmentEmployee} to Assignment{employee required}
}
relationship ManyToOne {
  Employee{supervisor} to Employee{teamMembers}
  Employee{job} to Job
}

service Assignment, Employee, Job, Project with serviceClass
paginate Employee with infinite-scroll
filter *