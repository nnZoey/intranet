application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName intranet
    blueprints []
    buildTool maven
    cacheProvider ehcache
    clientFramework angularX
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1643256115296
    databaseType sql
    devDatabaseType postgresql
    dtoSuffix DTO
    enableGradleEnterprise false
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation true
    gradleEnterpriseHost ""
    jhiPrefix jhi
    jhipsterVersion "7.6.0"
    jwtSecretKey "Nzk3NDMwN2EyZmNiNDZlODZmMGNmYzMzMjYzZTUxNzA2MDdmNDZlZTNhYzFhMWY2MzFiNzAxMGUwNTFiMGYxMzA3NzVmNWNmYWVjZjMwNzhkMmFkMjYwNGYxMzBmNDRhZGU4NTgyODY0NDU3OGJjZDU5ZDQ5NThlNDNlMzkwMTQ="
    languages [en, vi]
    messageBroker false
    nativeLanguage en
    otherModules []
    packageName vn.leap.intranet
    prodDatabaseType postgresql
    reactive false
    searchEngine false
    serverPort 8080
    serviceDiscoveryType false
    skipUserManagement false
    testFrameworks []
    websocket false
    withAdminUi true
  }
  entities *
}
entity Department {
  @Id id Long
  name String required unique
}
entity Employee {
  @Id id Long
  effectiveDate ZonedDateTime required
  employeeCode String required
  professionalEmail String required unique
  professionalPhoneNumber String required unique
  salary Long required min (1000000)
  commissionPct Long required min(1) max(100)
  contractNumber String required unique
  contractStartDate ZonedDateTime required
  contractEndDate ZonedDateTime required
  contractType String
}
entity Person {
  @Id id Long
  firstName               String        required
  lastName                String        required
  sex                     Sex           required
  dob                     ZonedDateTime required
  placeOfBirth            String
  personalPhoneNumber     String        required unique
  personalEmail           String        required unique
  permanentAddress        String        required
  temporaryAddress        String        required
  idNumber                String        required
  idIssuedDate            ZonedDateTime required
  idIssuedLocation        String        required
  socialInsuranceNumber   String
  taxIdentificationNumber String
  qualification           String
}
entity BankAccount {
  @Id id      Long
  bankAccount String required
  bankCode    String required
}
entity Job {
  @Id id Long
  jobTitle String required unique
  minSalary Long required min (1000000)
  maxSalary Long required min (1000000)
}
entity JobHistory {
  @Id id Long
  employeeCode String required
  effectiveDate ZonedDateTime required
  salary Long required min (1000000)
  commissionPct Long required min(1) max(100)
  contractNumber String required unique
  contractStartDate ZonedDateTime required
  contractEndDate ZonedDateTime required
  contractType String
}
entity Project {
  @Id id Long
  name String required
  description String required
  startDate ZonedDateTime required
  endDate ZonedDateTime
  status Status required
}
entity Assignment {
  @Id id Long
  startDate ZonedDateTime required
  projectRole ProjectRole required
}
enum ProjectRole {
  ENGINEER,
  ADMIN,
  MANAGER,
  DIRECTOR,
  INTERN
}
enum Sex {
  FEMALE,
  MALE,
  NONE
}
enum Status {
  NEW,
  OPEN,
  PROGRESS,
  COMPLETED,
  HOLD
}
relationship OneToOne {
  Person{employee required} to Employee
  BankAccount{employeeAccount required} to Employee
}
relationship OneToMany {
  Project{assignment} to Assignment{project required}
  Employee{assignment} to Assignment{employee required}
  Department{employee} to Employee{department required}
  Employee{jobHistory} to JobHistory{employee required}
}
relationship ManyToOne {
  Employee{supervisor} to Employee{teamMembers}
  JobHistory{supervisor} to Employee{teamMembersInHistory}
  Employee{job} to Job
  JobHistory{job} to Job
}
service Assignment, Department, Employee, Job, JobHistory, Person, Project with serviceClass
paginate Employee, JobHistory with infinite-scroll
paginate Job with pagination
filter * 